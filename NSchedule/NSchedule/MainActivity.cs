using System;
using System.Threading.Tasks;
using Android.App;
using Android.OS;
using Android.Runtime;
using Android.Support.Design.Widget;
using Android.Support.V7.App;
using Android.Views;
using Android.Widget;
using NSchedule.Helpers;
using Xamarin.Essentials;

namespace NSchedule
{
    [Activity(Label = "@string/app_name", Theme = "@style/AppTheme", MainLauncher = true)]
    public class MainActivity : Activity
    {
        bool loggedin = false;

        protected override void OnCreate(Bundle savedInstanceState)
        {
            Statics.InitializeStatics();

            base.OnCreate(savedInstanceState);
            Xamarin.Essentials.Platform.Init(this, savedInstanceState);

            // Setting layout and hiding actionbar.
            SetContentView(Resource.Layout.MainActivity);

            FindViewById<ProgressBar>(Resource.Id.loginProgress).Visibility = ViewStates.Invisible;

            // fuck it y'all
            FindViewById<EditText>(Resource.Id.emailfield).Text 
                = SecureStorage.GetAsync("email").GetAwaiter().GetResult();

            var pass = SecureStorage.GetAsync("password").GetAwaiter().GetResult();

            if (!string.IsNullOrEmpty(pass))
            {
                FindViewById<CheckBox>(Resource.Id.rememberPassword).Selected = true;
                FindViewById<EditText>(Resource.Id.passwordfield).Text = pass;
            }

            // Setting event for the login button.
            var loginbtn = FindViewById<Button>(Resource.Id.loginbutton);
            loginbtn.Click += (sender, e) =>
            {
                Task.Run(async () => { await Loginbtn_Click(); });
                loginbtn.Enabled = false;
            };

            var disclaimer = FindViewById<TextView>(Resource.Id.disclaimer);
            disclaimer.Click += Disclaimer_Click;
        }

        private int clicks = 0;
        private void Disclaimer_Click(object sender, EventArgs e)
        {
            clicks++;

            if(clicks > 10)
            {
                Toast.MakeText(Application.Context, "Onii-chan, yamero!", ToastLength.Long).Show();
            }
        }

        private async Task Loginbtn_Click()
        {
            // Getting email and password from their respective fields.
            var email = FindViewById<EditText>(Resource.Id.emailfield).Text;
            var password = FindViewById<EditText>(Resource.Id.passwordfield).Text;

            await SecureStorage.SetAsync("email", email);

            RunOnUiThread(() =>
            {
                FindViewById<ProgressBar>(Resource.Id.loginProgress).Visibility = ViewStates.Visible;
                Toast.MakeText(Application.Context, $"Trying login to: {email}", ToastLength.Long).Show();
            });

            this.loggedin = await Statics.RestHelper.Authenticate(email, password, FindViewById<CheckBox>(Resource.Id.stayLoggedIn).Selected);

            //var schedule = await Statics.RestHelper.GetScheduleAsync(2, 2019, 4489, 4);

            RunOnUiThread(() =>
            {
                FindViewById<ProgressBar>(Resource.Id.loginProgress).Visibility = ViewStates.Invisible;
                Toast.MakeText(Application.Context, $"Login success: {loggedin}", ToastLength.Long).Show();
                // Reroute to next activity.
            });

            var schedule = await Statics.RestHelper.GetScheduleAsync(4, 2019, 4489, 2);
        }

        // Auto generated by xamarin. Seems important. Guess we'll keep it for now.
        public override void OnRequestPermissionsResult(int requestCode, string[] permissions, [GeneratedEnum] Android.Content.PM.Permission[] grantResults)
        {
            Xamarin.Essentials.Platform.OnRequestPermissionsResult(requestCode, permissions, grantResults);

            base.OnRequestPermissionsResult(requestCode, permissions, grantResults);
        }
	}
}

